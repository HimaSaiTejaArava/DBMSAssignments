1. Find out the PG-13 rated comedy movies. DO NOT use the film_list table.
	select title from film where film_id in (select film_id from film_category where category_id in (select category_id from category where name="Comedy"));

2. Find out the top 3 rented horror movies.
	select inv.film_id, film.title, count(ren.rental_id) times_rented from rental ren join inventory inv on ren.inventory_id = inv.inventory_id join film on film.film_id = inv.film_id join film_category filmCat on inv.film_id = filmCat.film_id join category cat on cat.category_id=filmCat.category_id where cat.name="Horror" group by inv.film_id order by times_rented desc limit 

3. Find out the list of customers from India who have rented sports movies.
	select first_name,last_name from customer where customer_id in (select customer_id from rental where inventory_id in (select inventory_id from inventory where film_id in (select film_id from film_category where category_id in (select category_id from category where name="Sports")))) and address_id in(select address_id from address where city_id in (select city_id from city where country_id in(select country_id from country where country="India")));

4. Find out the list of customers from Canada who have rented “NICK WAHLBERG” movies.
	select first_name,last_name from customer where customer_id in(select customer_id from rental where inventory_id in (select inventory_id from inventory where film_id in (select film_id from film_actor where actor_id in (select actor_id from actor where CONCAT(first_name," ",last_name)="NICK WAHLBERG")))) and address_id in(select address_id from address where city_id in (select city_id from city where country_id in(select country_id from country where country="Canada")));

5. Find out the number of movies in which “SEAN WILLIAMS” acted
	select count(*) as no_of_films from actor act join film_actor filmAct on act.actor_id=filmAct.actor_id join film on film.film_id = filmAct.film_id where CONCAT(act.first_name," ",act.last_name)="SEAN WILLIAMS";
	
--------------------------------

1. Find out the number of documentaries with deleted scenes.
	select count(distinct f.film_id) as no_of_films from film f join film_category filmCat on f.film_id=filmCat.film_id join category c on filmCat.category_id=c.category_id where c.name="Documentary" and f.special_features="Deleted Scenes";
	
2. Find out the number of sci-fi movies rented by the store managed by Jon Stephens.
	select COUNT(DISTINCT f.film_id) as no_of_films from staff st join store s on st.staff_id=s.manager_staff_id join inventory inv on s.store_id=inv.store_id join film f on f.film_id = inv.film_id join film_category fc on f.film_id = fc.film_id join category cat on cat.category_id= fc.category_id where CONCAT(st.first_name," ",st.last_name)="Jon Stephens"  and cat.name="Sci-Fi";
	
3. Find out the total sales from Animation movies.
	select SUM(p.amount) as animation_sale from payment p join rental r on p.rental_id=r.rental_id join inventory inv on inv.inventory_id=r.inventory_id join film f on inv.film_id=f.film_id join film_category fc on f.film_id=fc.film_id join category c on fc.category_id=c.category_id where c.name="Animation";
	
4. Find out the top 3 rented category of movies  by “PATRICIA JOHNSON”.
	select c.name category, count(c.category_id) times_rented from customer cust join rental r on r.customer_id=cust.customer_id join inventory inv on inv.inventory_id=r.inventory_id join film f on inv.film_id=f.film_id join film_category fc on f.film_id=fc.film_id join category c on fc.category_id=c.category_id where CONCAT(cust.first_name," ",cust.last_name)="PATRICIA JOHNSON" group by c.name order by times_rented desc limit 3;

5. Find out the number of R rated movies rented by “SUSAN WILSON”.
	select count(distinct f.film_id) R_rated_rentals from customer cust join rental r on r.customer_id=cust.customer_id join inventory inv on inv.inventory_id=r.inventory_id join film f on inv.film_id=f.film_id where f.rating="R" and CONCAT(cust.first_name," ",cust.last_name)="SUSAN WILSON";
